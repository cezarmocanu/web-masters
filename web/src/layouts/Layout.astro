--- 
interface Props {
	title?: string;
	metaDescription?: string;
}

const DEFAULT_TITLE = "Învață gratuit dezvoltare software | Web Masters";
const DESCRIPTION_DEFAULT = "Descoperă cursuri gratuite de programare pe Web Masters: învață coding, dezvoltare web și mai mult. Alege să-ți dezvolți abilitățile în domeniul IT cu lecții interactive și resurse de calitate.";

const { title, metaDescription } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="keywords" content="cursuri programare incepatori, programare, gratuit, JavaScript, web, cursuri">
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={metaDescription ?? DESCRIPTION_DEFAULT}/>
		<meta property="og:title" content={title ?? DEFAULT_TITLE} />
		<meta property="og:description" content={metaDescription ?? DESCRIPTION_DEFAULT} />
		<meta property="og:type" content="website" />
		<meta property="og:locale" content="ro_RO" />
		<meta property="og:url" content="https://web-masters.dev" />
		<meta property="og:site_name" content="Web Masters" />
		<meta property="og:image" content="https://web-masters.dev/logo.svg" />
		<link rel="icon" type="image/svg+xml" href="/logo.svg" />
		<title>{title ?? DEFAULT_TITLE}</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	*{
		padding: 0;
		margin: 0;
		box-sizing: border-box;
	}
	:root {
		--v: rgb(0, 54, 40);
		--accent: 65, 255, 208;
		--accent-light: 176, 255, 235;
		--accent-dark: 0, 111, 83;
		--accent-dark-2: 0, 54, 40;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), rgb(var(--accent-light)) 30%, white 60%);
	}
	html {
		font-family: system-ui, sans-serif;
		background: #0c1d17;
		background-size: 224px;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	a {
		color: white;
		text-decoration: none;
	}

	a:hover {
		color: rgba(var(--accent));

	}

	button {
		background-color: rgba(var(--accent-dark));
		border: none;
		outline: inherit;
		color: white;
		border-radius: 4px;
	}

	hr {
		border: none;
		border-bottom: 2px solid rgba(var(--accent-dark));
	}

	button:hover {
		background-color: rgba(var(--accent));
		cursor: pointer;
		color: rgba(var(--accent-dark))
	}

	button:active {
		background-color: rgba(var(--accent));
		cursor: pointer;
		color: rgba(var(--accent-dark-2))
	}

	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}


	.flip-in-hor-bottom {
    -webkit-animation: flip-in-hor-bottom 0.5s
      cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
    animation: flip-in-hor-bottom 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  /* ----------------------------------------------
	* Generated by Animista on 2023-8-13 3:17:28
	* Licensed under FreeBSD License.
	* See http://animista.net/license for more info. 
	* w: http://animista.net, t: @cssanimista
	* ---------------------------------------------- */

  @-webkit-keyframes flip-in-hor-bottom {
    0% {
      -webkit-transform: rotateX(80deg);
      transform: rotateX(80deg);
      opacity: 0;
    }
    100% {
      -webkit-transform: rotateX(0);
      transform: rotateX(0);
      opacity: 1;
    }
  }
  @keyframes flip-in-hor-bottom {
    0% {
      -webkit-transform: rotateX(80deg);
      transform: rotateX(80deg);
      opacity: 0;
    }
    100% {
      -webkit-transform: rotateX(0);
      transform: rotateX(0);
      opacity: 1;
    }
  }

   /* CSS CHECKBOX */
   .control {
    font-family: arial;
    display: block;
    position: relative;
    padding-left: 30px;
    margin-bottom: 5px;
    padding-top: 3px;
    cursor: pointer;
    font-size: 16px;
  }
  .control input {
    position: absolute;
    z-index: -1;
    opacity: 0;
  }
  .control_indicator {
    position: absolute;
    top: 2px;
    left: 0;
    height: 20px;
    width: 20px;
    background: #e6e6e6;
    border: 0px solid #000000;
    border-radius: 4px;
  }
  .control:hover input ~ .control_indicator,
  .control input:focus ~ .control_indicator {
    background: #cccccc;
  }

  .control input:checked ~ .control_indicator {
    background: rgba(var(--accent-dark));
  }
  .control:hover input:not([disabled]):checked ~ .control_indicator,
  .control input:checked:focus ~ .control_indicator {
    background: #0e6647d;
  }
  .control input:disabled ~ .control_indicator {
    background: #e6e6e6;
    opacity: 0.6;
    pointer-events: none;
  }
  .control_indicator:after {
    box-sizing: unset;
    content: "";
    position: absolute;
    display: none;
  }
  .control input:checked ~ .control_indicator:after {
    display: block;
  }
  .control-checkbox .control_indicator:after {
    left: 8px;
    top: 4px;
    width: 3px;
    height: 8px;
    border: solid #ffffff;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
  }
  .control-checkbox input:disabled ~ .control_indicator:after {
    border-color: #7b7b7b;
  }
  .control-checkbox .control_indicator::before {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 4.5rem;
    height: 4.5rem;
    margin-left: -1.3rem;
    margin-top: -1.3rem;
    background: rgba(var(--accent));
    border-radius: 3rem;
    opacity: 0.6;
    z-index: 99999;
    transform: scale(0);
  }
  @keyframes s-ripple {
    0% {
      transform: scale(0);
    }
    20% {
      transform: scale(1);
    }
    100% {
      opacity: 0;
      transform: scale(1);
    }
  }
  @keyframes s-ripple-dup {
    0% {
      transform: scale(0);
    }
    30% {
      transform: scale(1);
    }
    60% {
      transform: scale(1);
    }
    100% {
      opacity: 0;
      transform: scale(1);
    }
  }
  .control-checkbox input + .control_indicator::before {
    animation: s-ripple 250ms ease-out;
  }
  .control-checkbox input:checked + .control_indicator::before {
    animation-name: s-ripple-dup;
  }
</style>
